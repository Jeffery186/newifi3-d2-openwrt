name: Build-OpenWrt

on:
  workflow_dispatch:
  push:
    branches:
      - main
#  release:
#    types: published
#  schedule:
#    - cron: 0 8 * * 5
#  watch:
#    types: started
#  repository_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id
    #    timeout-minutes: 360

    steps:
      - name: Clone Repository
        uses: actions/checkout@v3
      - name: Init Compilation Dependencies
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi $(docker images -q)
          sudo -E apt-get -qq remove --purge azure-cli ghc zulu* hhvm llvm* firefox google* dotnet* powershell mysql* php* mssql-tools msodbcsql17 android*
          sudo -E apt-get -qq update
          sudo -E apt-get -qq full-upgrade
          sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 coreutils gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-8 gcc++-8 gcc-8-multilib g++-8-multilib p7zip p7zip-full msmtp libssl-dev texinfo libreadline-dev libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint ccache curl wget vim nano python python3 python-pip python3-pip python-ply python3-ply haveged lrzsz device-tree-compiler scons antlr3 gperf ecj fastjar re2c xz-utils tar
          for i in $(ls /usr/bin/*-8); do sudo -E ln -sf $i ${i%%-8*}; done
          sudo -E ln -sf /usr/include/asm-generic /usr/include/asm
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo -E swapoff -a
          sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /usr/local/lib/android /opt/ghc /swapfile
      - name: Clone Source
        run: |
          cd /home/runner
          bash ${GITHUB_WORKSPACE}/clone_source.sh
          sudo chown -R runner:runner immortalwrt
      - name: Before Build
        run: |
          /bin/bash ${GITHUB_WORKSPACE}/before_build.sh
          cp -fpR ${GITHUB_WORKSPACE}/. /home/runner/immortalwrt/

      - name: Start Build
        run: |
          cd /home/runner/immortalwrt
          mv .config_immortalwrt .config
          rm -f .config.old
          make defconfig; make -j$[$(nproc)+1]; rm -rf build_dir/target* build_dir/toolchain* staging_dir/target* staging_dir/toolchain*
      - name: After Build
        run: |
          /bin/bash /home/runner/immortalwrt/after_build.sh
      - name: Upload Packages
        uses: actions/upload-artifact@v4
        with:
          name: Packages
          path: /home/runner/immortalwrt/bin/packages/
      - name: Upload Firmwares
        uses: actions/upload-artifact@v4
        with:
          name: Firmwares
          path: /home/runner/immortalwrt/bin/targets/